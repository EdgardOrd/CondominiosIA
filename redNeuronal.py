# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kKoHmQOh9WPeNONYeaWXjDBnpU4FEF__
"""

import tensorflow as tf
import matplotlib.pyplot as plt

#ciudad(solo sps y tegus),
#m^2, 
#nº hab,
#baños, .5 es baño y medio
#nº planta, 
#ascensor (0-1), 
#exterior (0-1),  
#amueblado (0,1), 
#céntrico (0, 1), 
#area verde (0,1), 
#gimnasio(1,0), 
#cantidad de parqueos, 
#piscina(1,0),
#seguridad(1,0), 
#0 sera Tegus y 1 sera sps
#0 no y 1 si
features = [(0, 110, 2, 2, 5, 1, 1, 1, 1, 1, 1, 2, 1, 1),#Normal
            (0, 110, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0),#sin nada
            (0, 200, 2, 2, 5, 1, 1, 1, 1, 1, 1, 2, 1, 1),#Metros
            (0, 200, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0),
            (0, 110, 4, 2, 5, 1, 1, 1, 1, 1, 1, 2, 1, 1),#Habitaciones
            (0, 110, 5, 2, 5, 1, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 4, 4, 5, 1, 1, 1, 1, 1, 1, 2, 1, 1),#Baños
            (0, 200, 2, 5, 5, 1, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 2, 10, 1, 1, 1, 1, 1, 1, 2, 1, 1),#numero de planta
            (0, 200, 2, 2, 10, 1, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 2, 10, 0, 1, 1, 1, 1, 1, 2, 1, 1),#asensor
            (0, 110, 2, 2, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 2, 5, 1, 0, 1, 1, 1, 1, 2, 1, 1),#exterior
            (0, 200, 2, 2, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0),
            (0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0),
            (0, 160, 2, 2 , 13, 1, 1, 1, 1, 0, 1, 4, 0, 1),
            (0, 110, 2, 2, 5, 1, 1, 0, 1, 1, 1, 2, 1, 1),#amueblado
            (0, 110, 2, 2, 5, 1, 1, 1, 0, 1, 1, 2, 1, 1),#centrico
            (0, 110, 2, 2, 5, 1, 1, 1, 1, 0, 1, 2, 1, 1),#area verde
            (0, 110, 2, 2, 5, 1, 1, 1, 1, 1, 0, 2, 1, 1),#GYM
            (0, 110, 2, 2, 5, 1, 1, 0, 1, 1, 0, 2, 1, 1),
            (0, 200, 2, 2, 5, 1, 1, 1, 1, 1, 0, 2, 1, 1),
            (0, 110, 2, 2, 5, 1, 1, 1, 1, 1, 1, 5, 1, 1),#parqueos
            (0, 110, 2, 2, 5, 0, 0, 0, 0, 0, 0, 5, 0, 0),
            (0, 110, 2, 2, 5, 1, 1, 1, 1, 1, 1, 2, 0, 1),#piscina
            (0, 110, 2, 2, 5, 1, 1, 1, 1, 1, 1, 2, 1, 0),#Seguridad
            (0, 200, 2, 2, 5, 1, 1, 1, 1, 1, 1, 2, 1, 0),
            (0, 110, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 2, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1)
            

            ] 

targets = [1400,100,2100,400,1900,2000,1800,2300,2600,1600,900,900,1300,500,150,1800,1000,1000,1300,1300,500,1900,1450,600,1150,1000,1800,1200,1200,600]

data = list(zip(features, targets))

# Ordenar los datos por el valor de targets
data.sort(key=lambda x: x[1])

# Imprimir los resultados
for d in data:
    print(d)

capaEntrada = tf.keras.layers.Dense(units=14, input_shape=[14])
capaOculta = tf.keras.layers.Dense(units=14)
capaOculta2 = tf.keras.layers.Dense(units=14)
capaOculta3 = tf.keras.layers.Dense(units=14)
capaSalida = tf.keras.layers.Dense(units=1)

modelo = tf.keras.Sequential([capaEntrada, capaOculta,capaOculta2,capaOculta3, capaSalida])

modelo.compile(
    optimizer = tf.keras.optimizers.Adam(0.1),
    loss = 'mean_squared_error'
)

print('Inicio de entrenamiento...')
historial = modelo.fit(features, targets, epochs=1500, verbose=False)
print('Modelo entrenado!')

plt.xlabel('#Época')
plt.ylabel('Mágnitud de pérdida')
plt.plot(historial.history['loss'])
plt.show()

pip install tensorflowjs

modelo.save('pisos_alquiler.h5')
print("Fin")
!tensorflowjs_converter --input_format keras pisos_alquiler.h5 condominios

!mkdir data_condominios

!tensorflowjs_converter --input_format keras pisos_alquiler.h5 data_condominios

"""# New Section"""

import tensorflow as tf
import matplotlib.pyplot as plt

#ciudad(solo sps y tegus), 
#m^2, 
#nº hab,
#baños, .5 es baño y medio
#nº planta, 
#ascensor (0-1), 
#exterior (0-1),  
#amueblado (0,1), 
#céntrico (0, 1), 
#area verde (0,1), 
#gimnasio(1,0), 
#cantidad de parqueos, 
#piscina(1,0),
#seguridad(1,0), 
#0 sera Tegus y 1 sera sps
#0 no y 1 si
features = [(0, 110, 2, 0.5, 1, 0, 1, 0, 1, 1, 0, 2, 1, 0,),
            (0, 110, 2, 0.5, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0,), 
            (0, 110, 2, 2.5, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0,),
            (0, 110, 2, 2.5, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,), 
            (0, 160, 2, 2 , 13, 1, 1, 1, 1, 0, 1, 4, 0, 1,),
            (0, 160, 2, 2 , 13, 1, 1, 1, 1, 0, 1, 4, 1, 1,), 
            (0, 150, 3, 2 ,  6, 0, 0, 1, 0, 0, 0, 2, 0, 1,),
            (0, 150, 3, 2 ,  6, 0, 0, 1, 0, 0, 0, 2, 1, 1,), 
            (0, 246, 3, 3 ,  1, 0, 1, 1, 1, 1, 0, 2, 1, 1,),
            (0, 246, 3, 3 ,  1, 0, 1, 1, 1, 1, 0, 2, 0, 1,), 
            (0, 108, 3, 2 ,  1, 0, 1, 1, 1, 1, 1, 2, 1, 1,), 
            (0, 108, 3, 2 ,  1, 0, 1, 1, 1, 1, 1, 2, 0, 1,), 
            (0, 200, 2, 2 ,  1, 0, 1, 1, 1, 1, 1, 3, 0, 1,),
            (0, 200, 2, 2 ,  1, 0, 1, 1, 1, 1, 1, 3, 1, 1,), 
            (0, 240, 2, 2 ,  1, 0, 1, 1, 1, 1, 1, 2, 0, 1,), 
            (0, 240, 2, 2 ,  1, 0, 1, 1, 1, 1, 1, 2, 1, 1,),  
            (0, 166, 3, 2.5, 1, 1, 1, 1, 0, 1, 1, 2, 0, 0,), 
            (0, 166, 3, 2.5, 1, 1, 1, 1, 0, 1, 1, 2, 1, 0,),
            (0, 87, 2, 0, 28, 0, 0, 0, 0, 0, 0, 1, 0, 0),
            (0, 252, 2, 0, 32, 0, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 118, 6, 2, 10, 1, 0, 0, 0, 0, 0, 0, 0, 0),
            (0, 103, 3, 4, 5, 1, 0, 0, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 3.5, 24, 0, 0, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 3.5, 8, 0, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 3.5, 4, 0, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 3.5, 16, 0, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 80, 2, 3.5, 10, 1, 1, 0, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 4, 10, 1, 1, 0, 1, 1, 1, 2, 1, 1),
            (0, 200, 4, 4, 10, 0, 1, 1, 0, 1, 1, 2, 1, 1),
            (0, 110, 2, 3.5, 24, 1, 0, 1, 1, 1, 1, 2, 1, 1),
            (0, 200, 4, 4, 10, 1, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 200, 4, 4, 10, 0, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 3.5, 24, 1, 0, 1, 1, 1, 1, 2, 1, 1),
            (0, 166, 3, 2.5, 2, 0, 0, 1, 1, 1, 1, 1, 1, 1),
            (0, 110, 2, 3.5, 24, 1, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 3.5, 24, 1, 0, 1, 1, 1, 1, 2, 1, 1),
            (0, 110, 2, 3.5, 24, 0, 0, 1, 1, 1, 1, 2, 1, 1),
            (0, 160, 2, 4, 9, 1, 1, 1, 1, 1, 1, 3, 1, 1),
            (0, 110, 2, 3.5, 10, 1, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 200, 4, 4, 10, 0, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 200, 2, 4, 30, 1, 1, 1, 1, 1, 1, 3, 1, 1),
            (0, 200, 2, 4, 30, 1, 1, 1, 1, 1, 1, 3, 1, 1),
            (0, 200, 4, 4, 10, 1, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 246, 3, 5, 17, 1, 1, 1, 1, 0, 2, 1, 1, 1),
            (0, 252, 2, 1, 6, 1, 1, 1, 1, 1, 1, 2, 1, 1),
            (0, 252, 2, 3, 6, 1, 1, 1, 1, 1, 1, 2, 1, 1)] 

targets = [1700, 2040, 1450, 1740, 2000, 2500, 1400, 1680, 2700, 2160, 1800, 1440, 2000, 2500, 2280, 2850, 1440, 1800,250,678,723,863,908,920,930,956,980,1700,1700,1728,1800,1400,1228,1800,1808,1856,1456,2000,2000,2000,2198,2327,
           2500,2700,2723,2850]

           function reiniciarFormulario() {
  document.getElementById("m2").value = "";
  document.getElementById("hab").value = "";
  document.getElementById("ban").value = "";
  document.getElementById("planta").value = "";
  document.getElementById("parqueo").value = "";
  document.getElementById("ciudad").selectedIndex = 0;
  document.getElementById("ascensor").selectedIndex = 0;
  document.getElementById("ext").selectedIndex = 0;
  document.getElementById("amb").selectedIndex = 0;
  document.getElementById("cent").selectedIndex = 0;
  document.getElementById("verde").selectedIndex = 0;
  document.getElementById("gimnasio").selectedIndex = 0;
  document.getElementById("piscina").selectedIndex = 0;
  document.getElementById("seguridad").selectedIndex = 0;
  document.getElementById("mantenimiento").selectedIndex = 0;
  document.getElementById("resultado").innerHTML = "";
}

